<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.wephotos.bughub.mapper.HubUserMapper">
	<resultMap id="BaseResultMap" type="com.github.wephotos.bughub.entity.HubUser">
		<id column="id" property="id" jdbcType="CHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="account" property="account" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="roles" property="roles" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, account, password, roles, state, createTime, updateTime
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from hub_user
		where id = #{id,jdbcType=CHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from hub_user
		where id = #{id,jdbcType=CHAR}
	</delete>
	<insert id="insert" parameterType="com.github.wephotos.bughub.entity.HubUser">
		insert into hub_user (id, name, account,
		password, roles, state, 
		createTime, updateTime)
		values (#{id,jdbcType=CHAR}, #{name,jdbcType=VARCHAR},
		#{account,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}, #{roles,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
		#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.github.wephotos.bughub.entity.HubUser">
		update hub_user
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="account != null">
				account = #{account,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="roles != null">
				roles = #{roles,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				updateTime = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=CHAR}
	</update>

	<update id="updatePassword" parameterType="com.github.wephotos.bughub.entity.HubUser">
		update hub_user set password = #{password,jdbcType=VARCHAR} where id = #{id,jdbcType=CHAR}
	</update>

	<select id="selectByAccount" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from hub_user
		where account = #{account,jdbcType=VARCHAR}
	</select>

	<select id="pageList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from hub_user
		<where>
			<include refid="pageCond" />
		</where>
		ORDER BY 
		<choose>
			<when test="sortField != null">
				${sortField}
				<if test="sortDirection != null">
				  ${sortDirection}
				</if>
			</when>
			<otherwise>
			  updateTime desc
			</otherwise>
		</choose>
		LIMIT #{start}, #{limit}
	</select>

	<select id="pageCount" resultType="java.lang.Integer">
		select
		count(1)
		from hub_user
		<where>
			<include refid="pageCond" />
		</where>
	</select>

    <sql id="pageCond">
		<if test="condition != null and condition != ''">
				and 
				(
					name LIKE CONCAT('%',#{condition,jdbcType=VARCHAR},'%')
				    OR 
				    account LIKE CONCAT('%',#{condition,jdbcType=VARCHAR},'%')
				)
		</if>
	</sql>
</mapper>